Ejercicio_5_3_1.txt Procedimiento “TotalizaAlbaran3”, al que se le pasa como argumentos dos fechas (desde/hasta). Debe totalizar todos los importes de los albaranes (invocando al procedimiento ya hecho “TotalizaAlbaran2”) cuya fecha esté entre el rango proporcionado.CREATE OR REPLACE PROCEDURE TotalizaAlbaran3(p_fec_desde ALBARANES.FECHA%TYPE  p_fec_hasta ALBARANES.FECHA%TYPE)AS/DECLAREBEGIN	CURSOR  SELECT CANTIDAD * PRECIO	FROM ALBARANES	WHERE FECHA BETWEEN p_fec_desde AND p_fec_hasta;  END;Ejercicio_5_3_2.txtProcedimiento “RecalculaTotalVendido”, al que se le pasa como argumentos dos fechas (desde/hasta). Debe recalcular el campo TOTAL_VENDIDO de todos los artículos, acumulando las cantidades según los albaranes confirmados comprendidos entre las fechas indicadas.Ejercicio_5_3_3.txtDotar a la base de datos de ventas de la integridad necesaria para que no pueda modificarse ni borrarse un albarán en estado diferente de “A”.CREATE OR REPLACE TRIGGER NOMBRE_BUBEFORE UPDATE ON ALBARANES FOR EACH ROWDECLAREBEGIN	IF (:NEW.ESTADO <> 'A')	THEN		RAISE_APPLICATION_ERROR(-20010,'No se puede actualizar si el estado es diferente a A')	END IF;END;CREATE OR REPLACE TRIGGER EJER3_BDBEFORE DELETE ON ALBARANES FOR EACH ROWDECLAREBEGIN	IF (:OLD.ESTADO <> 'A')	THEN		RAISE_APPLICATION_ERROR(-20011,'No se puede borrarse si el estado es diferente a A')	END IF;END;Ejercicio_5_3_4.txtDotar a la base de datos de ventas de la integridad necesaria para que no pueda venderse nada a clientes que están de baja.CREATE OR REPLACE TRIGGER EJER4_BUBEFORE UPDATE ON CLIENTES FOR EACH ROWDECLARE	BEGIN	IF (FEC_BAJA IS NOT NULL)	THEN		RAISE_APPLICATION_ERROR(-20012,'NO SE PUEDE VENDER A UN CLIENTE DADO DE BAJA')	END IF;END;Ejercicio_5_3_5.txtSe pide al alumno desarrollar los disparadores necesarios para que no pueda realizarse una venta de este artículo en una fecha anterior a su fecha de entrada.CREATE OR REPLACE TRIGGER EJER5_BEFORE INSERT OR UPDATE ON ALBARANES_DET FOR EACH ROWDECLARE	v_fec ALBARANES.FECHA%TYPE;BEGIN	SELECT FECHA	INTO v_fec	FROM ALBARANES	/*WHERE */	IF (:NEW.FECHA < v_fec)	THEN		RAISE_APPLICATION_ERROR(-20013,'Todavia no ha llegado el articulo')	END IF;	END;Ejercicio_5_3_6.txtDesarrollar los disparadores necesarios para que el total de un albarán esté siempre bien calculado, según su base y porcentaje de IVA.CREATE OR REPLACE TRIGGER EJER6_AUAFTER UPDATE ON ALBARANES FOR EACH ROWDECLAREBEGIN	UPDATE ALBARANES	SET TOTAL=:NEW.BASE*END;